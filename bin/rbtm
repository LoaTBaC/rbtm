#!/usr/bin/env ruby
require 'rbtm'


def stop(reason)
  puts reason
  exit
end


begin
  rule = ARGV.fetch(0)
  tape = ARGV.fetch(1)
rescue
  stop('Usage: rbtm <rule> <tape> [-v]')
end

VERBOSE = ARGV[2].to_s.include?('v')

stop('Rule file does not exist.') unless File.exists?(rule)

if File.exists?(tape)
  tape = File.read(tape).strip
end

rules, state = Rbtm.parse(rule)
stop('No valid rules.') if rules.empty?
head = Rbtm::Head.new(tape, state)


if VERBOSE
  print 'Seconds per frame? (default: 0.5) '
  SLEEP_TIME = (num = $stdin.gets.to_f).zero? ? 0.5 : num
  COLS = `tput cols`.to_i

  system('clear')
  Rbtm.turing_machine(rules, head) do |h|
    first = (head.index / COLS) * COLS
    puts "#{' ' * head.index}v"[first...(first + COLS)]
    puts head.tape[first...(first + COLS)]
    puts
    puts head.state
    sleep(SLEEP_TIME)
    system('clear')
  end
else
  Rbtm.turing_machine(rules, head)
end
puts head
