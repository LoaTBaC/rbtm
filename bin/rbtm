#!/usr/bin/env ruby
require 'rbtm'


def pretty_display(rule, head)
  first = ((head.position) / 80) * 80
  puts "#{' ' * head.position}v"[first...(first+80)]
  puts head.tape.tape[first...(first+80)]
  puts
  puts head.state
  sleep(SLEEP_TIME)
  system('clear')
end


unless ARGV.size >= 2
  puts 'Usage: rbtm <rule> <tape> [-v]'
  exit
end
rule = ARGV[0]
tape = ARGV[1]
VERBOSE = ARGV[2].to_s.include?('v')


if File.exists?(rule)
  rule = File.read(rule)
else
  puts 'Rule file does not exist.'
  exit
end
if File.exists?(tape)
  tape = File.read(tape).strip
end

tape = Rbtm::Tape.new(tape)
rules, state = Rbtm.parse_rules(rule)
head = Rbtm::Head.new(tape, state)

if rules.empty?
  puts 'No valid rules.'
  exit
end


if VERBOSE
  print 'Seconds per frame? (default: 0.5) '
  SLEEP_TIME = (num = $stdin.gets.to_f).zero? ? 0.5 : num

  system('clear')
  Rbtm.turing_machine(rules, head) { |r, h| pretty_display(r, h) }
else
  Rbtm.turing_machine(rules, head)
end
puts tape
